services:
##########################
########POSTGRESQL########
##########################
  postgresql:
    build:
      context: ./requirements/postgresql
    container_name: postgresql
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    env_file:
      - .env
    expose:
      - 5432
    networks:
      transcendence:
        ipv4_address: 10.0.10.12
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

######################
########DJANGO########
######################
  django:
    container_name: django
    build:
      context: ./requirements/django
    command: uvicorn transcendence.asgi:application --host 0.0.0.0 --port 8000
    volumes:
      - ./data/django_data:/app
      - ./data/website_data:/app/transcendence/static
    ports:
      - "8000:8000"
      - "8001:8001"
    depends_on:
      - postgresql
    networks:
      transcendence:
        ipv4_address: 10.0.10.10
    environment:
      - DJANGO_SETTINGS_MODULE=transcendence.settings
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

#####################
########NGINX########
#####################
  nginx_modsecurity_crs:
    image: owasp/modsecurity-crs:4.3.0-nginx-202406090906
    container_name: nginx_modsecurity_crs
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./requirements/nginx/nginx.conf:/etc/nginx/transcendence.conf
      - ./requirements/nginx/default.conf:/etc/nginx/conf.d/transcendence.conf
      - ./data/website_data/:/app/static/
    networks:
      transcendence:
        ipv4_address: 10.0.10.2
    depends_on:
      - django
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

#############################
########ELASTICSEARCH########
#############################
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      transcendence:
        ipv4_address: 10.0.10.20
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

########################
########LOGSTASH########
########################
  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.1
    container_name: logstash
    volumes:
      - ./requirements/logstash/config:/usr/share/logstash/config
      - ./requirements/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
    networks:
      transcendence:
        ipv4_address: 10.0.10.21
    depends_on:
      - elasticsearch
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

########################
########FILEBEAT########
########################
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.13.4
    container_name: filebeat
    volumes:
      - ./requirements/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      transcendence:
        ipv4_address: 10.0.10.50
    environment:
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    depends_on:
      - logstash

######################
########KIBANA########
######################
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: kibana
    ports:
      - "5601:5601"
    networks:
      transcendence:
        ipv4_address: 10.0.10.22
    depends_on:
      - elasticsearch
    environment:
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - XPACK_SECURITY_ENCRYPTIONKEY=${XPACK_SECURITY_ENCRYPTIONKEY}
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY}
      - XPACK_REPORTING_ENCRYPTIONKEY=${XPACK_REPORTING_ENCRYPTIONKEY}
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

##########################
########PROMETHEUS########
##########################
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./requirements/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9091:9090"
    networks:
      transcendence:
        ipv4_address: 10.0.10.30
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

#######################
########GRAFANA########
#######################
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    networks:
      transcendence:
        ipv4_address: 10.0.10.31
    depends_on:
      - prometheus
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

#########################
########PORTAINER########
#########################
  portainer:
    image: portainer/portainer-ce:2.20.3
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "${PORTAINER_PORT}:${PORTAINER_PORT}"
    env_file:
      - .env
    networks:
      transcendence:
        ipv4_address: 10.0.10.40
    logging:
      driver: "json-file"
      options:
        max-size: "200k"

#####################
########VAULT########
#####################
  vault:
    image: hashicorp/vault:latest
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_DEV_ROOT_TOKEN_ID=myroot
    cap_add:
      - IPC_LOCK
    networks:
      transcendence:
        ipv4_address: 10.0.10.69
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"


#######################
########VOLUMES########
#######################
volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "./data/postgres_data/"
  django_data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "./data/django_data/"
  es_data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "./data/es_data/"
  portainer_data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "./data/portainer_data/"
  nodejs_data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "./data/nodejs_data/"

########################
########NETWORKS########
########################
networks:
  transcendence:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.0.10.0/24

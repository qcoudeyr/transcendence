services:
#####################
#######CERTBOT#######
#####################
  certbot:
    image: certbot/dns-luadns
    container_name: tr_certbot
    volumes:
        - ./requirements/certbot/luadns.ini:/.secrets/certbot/luadns.ini:ro
        - ./data/certbot/certificates/:/etc/letsencrypt/archive
        - ./data/certbot/logs:/var/log/letsencrypt
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped

#######################
#######SETUP-TLS#######
#######################
  tls:
    container_name: tr_tls
    profiles:
      - setup
    build:
      context: ./requirements/tls/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    user: root
    init: true
    volumes:
      - ./requirements/tls/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./requirements/tls/instances.yml:/usr/share/elasticsearch/tls/instances.yml:ro,Z
      - ./requirements/tls/certs:/usr/share/elasticsearch/tls/certs:z

##########################
########POSTGRESQL########
##########################
  postgresql:
    build:
      context: ./requirements/postgresql
    container_name: tr_postgresql
    volumes:
      - ./data/credentials/postgresql_approle.env:/vault/config/postgresql_approle.env:ro
      - ./requirements/postgresql/entrypoint/:/vault/entrypoint/:ro
      - postgres_data:/var/lib/postgresql/data
      - ./requirements/postgresql/postgresql.conf:/etc/postgresql.conf:ro
      - ./requirements/tls/certs/postgresql/postgresql.crt:/etc/ssl/private/server.crt
      - ./requirements/tls/certs/postgresql/postgresql.key:/etc/ssl/private/server.key
      - ./requirements/tls/certs/ca/ca.crt:/etc/ssl/private/ca.crt
    restart: always
    expose:
      - 5432
    networks:
      transcendence:
        ipv4_address: 10.0.10.12
    hostname: postgresql
    environment:
      - VAULT_ADDR=${VAULT_ADDR}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - SERVICE_NAME=postgresql
      - SECRET_PATH=postgresql
    entrypoint: ["/vault/entrypoint/entrypoint.sh","docker-entrypoint.sh"]
    command: "postgres -c config_file=/etc/postgresql.conf"

######################
########DJANGO########
######################
  django:
    container_name: tr_django
    build:
      context: ./requirements/django
    hostname: django
    restart: always
    volumes:
      - ./data/django_data:/app
      - ./data/media_data:/app/media
      - ./data/credentials/django_approle.env:/vault/config/django_approle.env:ro
      - ./requirements/entrypoint/:/vault/entrypoint/:ro
      - ./requirements/tls/certs/django/django.crt:/app/certs/django.crt:ro
      - ./requirements/tls/certs/django/django.key:/app/certs/django.key:ro
      - ./requirements/tls/certs/ca/ca.crt:/app/certs/ca.crt:ro
      - ./requirements/tls/certs/apm-server/apm-server.crt:/app/certs/localhost/localhost.crt:ro
      - ./requirements/tls/certs/postgresql/:/app/certs/postgresql/:ro
    expose:
      - 8000
    ports:
      - "8000:8000"
    depends_on:
      - vault
      - postgresql
    networks:
      transcendence:
        ipv4_address: 10.0.10.10
    environment:
      - VAULT_ADDR=https://vault:8300
      - SERVICE_NAME=django
      - SECRET_PATH=django
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DJANGO_SUPERUSER_NAME=${DJANGO_SUPERUSER_NAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
    entrypoint: ["/vault/entrypoint/entrypoint.sh"]
    command: "start.sh"

######################
#######CHANNELS#######
######################
  channels:
    container_name: tr_channels
    build: ./requirements/channels
    restart: always
    hostname: channels
    volumes:
      - ./data/certbot/certificates/pong-br.com/:/etc/nginx/ssl/pong-br.com/:ro
      - ./data/channels_data:/app
      - ./data/django_data/transcendence/profiles:/app/transcendence/profiles
      - ./data/django_data/transcendence/game:/app/transcendence/game
      - ./data/credentials/channels_approle.env:/vault/config/channels_approle.env:ro
      - ./requirements/entrypoint/:/vault/entrypoint/:ro
      - ./data/certbot/certificates/pong-br.com/cert1.pem:/app/certs/channels-crt.pem:ro
      - ./data/certbot/certificates/pong-br.com/privkey1.pem:/app/certs/channels-key.pem:ro
      - ./requirements/tls/certs/ca/ca.crt:/app/certs/ca.crt:ro
      - ./requirements/tls/certs/apm-server/apm-server.crt:/app/certs/localhost/localhost.crt:ro
      - ./requirements/tls/certs/postgresql/:/app/certs/postgresql/:ro
    expose:
      - 8002
    ports:
      - "8002:8002"
    networks:
      transcendence:
        ipv4_address: 10.0.10.11
    depends_on:
      - vault
      - redis
      - postgresql
      - django
    environment:
      - VAULT_ADDR=https://vault:8300
      - SERVICE_NAME=channels
      - SECRET_PATH=channels
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
    entrypoint: ["/vault/entrypoint/entrypoint.sh"]
    command: "start.sh"

############################
########ENGINEWORKER########
############################
  engineworker:
    container_name: engineworker
    build: ./requirements/channels
    restart: always
    volumes:
      - ./data/channels_data:/app
      - ./data/django_data/transcendence/profiles:/app/transcendence/profiles
      - ./data/django_data/transcendence/game:/app/transcendence/game
      - ./data/credentials/engineworker_approle.env:/vault/config/engineworker_approle.env:ro
      - ./requirements/entrypoint/:/vault/entrypoint/:ro
    networks:
      transcendence:
        ipv4_address: 10.0.10.9
    depends_on:
      - vault
      - redis
      - postgresql
      - django
      - channels
    environment:
      - VAULT_ADDR=https://vault:8300
      - SERVICE_NAME=engineworker
      - SECRET_PATH=engineworker
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
    entrypoint: ["/vault/entrypoint/entrypoint.sh"]
    command: "python manage.py runworker engine-server"

############################
########UPDATEWORKER########
############################
  updateworker:
    container_name: updateworker
    build: ./requirements/channels
    restart: always
    volumes:
      - ./data/channels_data:/app
      - ./data/django_data/transcendence/profiles:/app/transcendence/profiles
      - ./data/django_data/transcendence/game:/app/transcendence/game
      - ./data/credentials/updateworker_approle.env:/vault/config/updateworker_approle.env:ro
      - ./requirements/entrypoint/:/vault/entrypoint/:ro
    networks:
      transcendence:
        ipv4_address: 10.0.10.8
    depends_on:
      - vault
      - redis
      - postgresql
      - django
      - channels
    environment:
      - VAULT_ADDR=https://vault:8300
      - SERVICE_NAME=updateworker
      - SECRET_PATH=updateworker
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
    entrypoint: ["/vault/entrypoint/entrypoint.sh"]
    command: "python manage.py runworker update-server"

#####################
########REDIS########
#####################
  redis:
    image: redis:7
    container_name: tr_redis
    expose:
      - 6379
    hostname: redis
    networks:
      transcendence:
        ipv4_address: 10.0.10.70
    restart: always
    environment:
      - VAULT_ADDR=${VAULT_ADDR}


#########################
########PORTAINER########
#########################
  portainer:
    image: portainer/portainer-ce:2.21.4
    container_name: tr_portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9443:9443
    environment:
      VIRTUAL_HOST: portainer.pongbr.com
      VIRTUAL_PORT: 9443
      VAULT_ADDR: ${VAULT_ADDR}
    networks:
      transcendence:
        ipv4_address: 10.0.10.40
    hostname: portainer
    restart: always

#####################
########NGINX########
#####################
  nginx:
    image: owasp/modsecurity-crs:nginx-alpine
    container_name: tr_nginx
    ports:
      - "80:8080"
      - "443:8443"
    volumes:
      - ./data/certbot/certificates/pong-br.com/:/etc/nginx/ssl/pong-br.com/:ro
      - ./requirements/nginx/pong-br.conf:/etc/nginx/templates/conf.d/default.conf.template
      - ./requirements/nginx/proxy_params:/config/nginx/sites-conf.d/proxy_params
      - ./requirements/nginx/nginx.conf:/etc/nginx/transcendence.conf
      - ./data/website_data/:/app/static/:ro
      - ./data/media_data/:/app/media/
      - ./requirements/nginx/modsecurity.conf.template:/etc/nginx/templates/modsecurity.d/modsecurity.conf.template:ro
      -  /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      transcendence:
        ipv4_address: 10.0.10.2
    hostname: nginx
    restart: unless-stopped
    environment:
      - VAULT_ADDR=${VAULT_ADDR}
      - DOMAIN_NAME=${DOMAIN_NAME}

#####################
########VAULT########
#####################
  vault:
    image: hashicorp/vault:latest
    container_name: tr_vault
    ports:
      - "8300:8300"
      - "8301:8301"
    volumes:
      - ./requirements/vault/config/:/vault/config/:rw
      - ./data/vault_data/data:/vault/data/:rw
      - ./data/vault_data/logs/:/vault/logs/:rw
      - ./data/vault_data/file:/vault/file/:rw
      - ./data/certificates/vault:/vault/certs
      - ./data/certificates/:/certs
    environment:
      - VAULT_ADDR=https://vault:8300
      - VAULT_API_ADDR=https://vault:8301
      - VAULT_ADDRESS=https://vault:8300
      - VAULT_UI=true
      - VAULT_CAPATH=/vault/certs/vault.pem
    cap_add:
      - IPC_LOCK
    networks:
      transcendence:
        ipv4_address: 10.0.10.69
    hostname: vault
    restart: always
    entrypoint: vault server -config /vault/config/config.hcl
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

#######################
########VOLUMES########
#######################
volumes:
  profile_share:

  postgres_data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "./data/postgres_data/"

  media_data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "./data/media_data/"

########################
########NETWORKS########
########################
networks:
  transcendence:
    name: tr_network
    external: true

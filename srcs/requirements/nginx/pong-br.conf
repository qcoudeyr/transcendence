# /config/nginx/sites-available/transcendence.conf

# Upstream definitions
upstream django {
    server 10.0.10.10:8000;
}

upstream channels {
    server 10.0.10.11:8002;
}

upstream portainer {
    server 10.0.10.40:9443;
}

upstream vault {
    server 10.0.10.69:8300;
}

upstream kibana {
    server 10.0.10.15:5601;
}

# Main HTTPS server block
server {
    listen 8443 ssl http2;
    listen [::]:8443 ssl http2;
    server_name pong-br.com localhost;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/pong-br.com/fullchain1.pem;
    ssl_certificate_key /etc/nginx/ssl/pong-br.com/privkey1.pem;

    # SSL optimization and security settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/pong-br.com/chain1.pem;
    # HSTS (uncomment if you're sure)
    # add_header Strict-Transport-Security "max-age=63072000" always;

    # Root location
    location / {
        root   /app/static;
        index  index.html index.htm;
        try_files $uri $uri/ =404;
    }

    # Rest of your existing configuration remains the same
    # Custom 404 handling
    error_page 404 /custom_404.html;
    location = /custom_404.html {
        internal;
        return 302 https://$host/redirect_404;
    }

    location = /redirect_404 {
        add_header Content-Type text/html;
        return 200 '<html><body><script>window.location.href = "https://$host/#404";</script></body></html>';
    }

    # Authentication for media files
    location = /auth {
        internal;
        proxy_pass https://django/api/media/auth/;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header Host $host;
        proxy_set_body "";
    }

    # Media files location with ClamAV scanning
    location /media {
        auth_request /auth;
        alias /app/media;
    }

    # API proxy configuration
    location /api {
        include /config/nginx/sites-conf.d/proxy_params;
        proxy_pass https://django/api;
    }

    location /ws {
        proxy_pass http://channels/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket specific settings
        proxy_read_timeout 86400;    # 24h, prevents timeout disconnections
        proxy_send_timeout 86400;    # 24h
        proxy_buffering off;         # Disable buffering for real-time communication

        # Prevent closing connection by nginx
        proxy_set_header Connection "upgrade";
    }


    # Additional security measures
    # Block common attack patterns
    location ~ (\.php|\.aspx|\.asp|\.jsp|\.cgi|\.env|\.git) {
        deny all;
        return 404;
    }
}

# Portainer server block
server {
    listen 8443 ssl http2;
    listen [::]:8443 ssl http2;
    server_name portainer.pong-br.com;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/pong-br.com/fullchain1.pem;
    ssl_certificate_key /etc/nginx/ssl/pong-br.com/privkey1.pem;

    # SSL optimization and security settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/pong-br.com/chain1.pem;

    # Proxy configuration for Portainer
    location / {
        proxy_pass https://portainer;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Vault server block
server {
    listen 8443 ssl http2;
    listen [::]:8443 ssl http2;
    server_name vault.pong-br.com;

    # SSL configuration (reusing the same certificates)
    ssl_certificate /etc/nginx/ssl/pong-br.com/fullchain1.pem;
    ssl_certificate_key /etc/nginx/ssl/pong-br.com/privkey1.pem;

    # SSL optimization and security settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/pong-br.com/chain1.pem;

    # Proxy all requests to vault
    location / {
        proxy_pass https://vault;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Block common attack patterns
    location ~ (\.php|\.aspx|\.asp|\.jsp|\.cgi|\.env|\.git) {
        deny all;
        return 404;
    }
}

server {
    listen 8443 ssl http2;
    listen [::]:8443 ssl http2;
    server_name kibana.pong-br.com;

    # SSL configuration (reusing the same certificates)
    ssl_certificate /etc/nginx/ssl/pong-br.com/fullchain1.pem;
    ssl_certificate_key /etc/nginx/ssl/pong-br.com/privkey1.pem;

    # SSL optimization and security settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/pong-br.com/chain1.pem;

    # Proxy all requests to Kibana
    location / {
        proxy_pass https://kibana;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Additional settings for Kibana
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # Block common attack patterns
    location ~ (\.php|\.aspx|\.asp|\.jsp|\.cgi|\.env|\.git) {
        deny all;
        return 404;
    }
}


server {
    listen 8080;
    listen [::]:8080;
    server_name pong-br.com vault.pong-br.com portainer.pong-br.com kibana.pong-br.com;

    # Force SSL
    return 301 https://$server_name$request_uri;
}

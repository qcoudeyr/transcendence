name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test_user -d test_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Set environment variables
      run: |
        echo "POSTGRES_DB=test_db" >> $GITHUB_ENV
        echo "POSTGRES_USER=test_user" >> $GITHUB_ENV
        echo "POSTGRES_PASSWORD=test_password" >> $GITHUB_ENV
        echo "DB_HOST=10.0.10.12" >> $GITHUB_ENV
        echo "DB_PORT=5432" >> $GITHUB_ENV
        echo "DATABASE_NAME=mydatabase" >> $GITHUB_ENV
        echo "DATABASE_USER=test_user" >> $GITHUB_ENV
        echo "DATABASE_PASSWORD=test_password" >> $GITHUB_ENV
        echo "DATABASE_HOST=10.0.10.12" >> $GITHUB_ENV
        echo "DATABASE_PORT=5432" >> $GITHUB_ENV
        echo "ELASTICSEARCH_URL=http://localhost:9200" >> $GITHUB_ENV
        echo "ELASTIC_USERNAME=elastic_user" >> $GITHUB_ENV
        echo "ELASTIC_PASSWORD=elastic_password" >> $GITHUB_ENV
        echo "XPACK_SECURITY_ENCRYPTIONKEY=some_encryption_key" >> $GITHUB_ENV
        echo "XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=some_encryption_key" >> $GITHUB_ENV
        echo "XPACK_REPORTING_ENCRYPTIONKEY=some_encryption_key" >> $GITHUB_ENV
        echo "PORTAINER_USER=portainer_user" >> $GITHUB_ENV
        echo "PORTAINER_PASSWORD=portainer_password" >> $GITHUB_ENV
        echo "PORTAINER_HOST=10.0.10.40" >> $GITHUB_ENV
        echo "PORTAINER_PORT=9000" >> $GITHUB_ENV
        echo "VAULT_URL=http://10.0.10.69:8201" >> $GITHUB_ENV
        echo "VAULT_TOKEN=vault_token" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r srcs/requirements/django/tools/requirements.txt
        pip install selenium
        sudo apt-get update
        sudo apt-get install -y chromium-chromedriver
        sudo ln -s /snap/bin/chromium /usr/bin/google-chrome > /dev/null 2>&1
    - name: Create necessary directories
      run: |
        mkdir -p /home/runner/work/transcendence/transcendence/data/postgres_data
        mkdir -p /home/runner/work/transcendence/transcendence/data/es_data
        mkdir -p /home/runner/work/transcendence/transcendence/data/portainer_data
    - name: Run Django tests
      run: |
        cd srcs/data/django_data
        python manage.py test
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Build Docker images
      run: docker-compose -f srcs/docker-compose.yml build
    - name: Run Docker containers
      run: docker-compose -f srcs/docker-compose.yml up -d
    - name: Run Selenium tests
      run: |
       python .github/workflows/test_login.py
    - name: Get Docker container logs
      if: failure()
      run: docker-compose -f srcs/docker-compose.yml logs
    - name: Tear down Docker containers
      if: always()
      run: docker-compose -f srcs/docker-compose.yml down
